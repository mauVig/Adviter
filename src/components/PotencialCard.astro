---
const { title, logoUrl, gridStyle } = Astro.props
---

<div class={`flex my-2 w-full md:w-auto`}>
    <div class="w-20 border-2 rounded-lg flex justify-center items-center">
        <img src={logoUrl} class="p-5">
    </div>
    <div class="border-2 -ml-[2px] rounded-lg flex justify-center items-center max-w-fit text-xl font-medium px-6 card-appear">
        <div>
            <h3 class="truncate">{title}</h3>
        </div>
    </div>
</div>

<style>
  .card-appear {
    width: 0;
    opacity: 0;
  }

  .card-appear.visible {
    animation: moves 3s forwards;
  }

  @keyframes moves {
    0% {
      width: 0;
      opacity: 0;
    }
    100% {
      width: 100%;
      opacity: 1;
    }
  }
</style>

<script>
  // Creamos el observer
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        // Cuando el elemento es visible, a침adimos la clase que dispara la animaci칩n
        entry.target.classList.add('visible');
        // Dejar de observar el elemento una vez que se ha animado
        observer.unobserve(entry.target);
      }
    });
  }, {
    threshold: 0.2 // La animaci칩n comenzar치 cuando al menos 10% del elemento sea visible
  });

  // Observamos todos los elementos con la clase card-appear
  document.querySelectorAll('.card-appear').forEach((el) => {
    observer.observe(el);
  });
</script>