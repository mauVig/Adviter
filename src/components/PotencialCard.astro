---
const { title, logoUrl } = Astro.props;
---

<div class="flex my-2 w-full md:w-auto allContainer">
  <div class=" w-16 md:w-20 border-2 rounded-lg flex preLogo-image justify-center items-center">
    <img src={logoUrl} class="p-5 logo-image" alt={title} />
  </div>
  <div class="border-2 -ml-[2px] rounded-lg flex justify-center items-center text-base sm:text-xl font-medium px-4 title-container">
    <h3 class="title-text">{title}</h3>
  </div>
</div>

<style>
  .title-container {
    background-color: transparent;
    transition: all 0.5s;
  }

  @keyframes backgroundEffect {
    0%,100% {
      background-color: transparent;
    }
    60% {
      background-color: #ededed;
    }
  }

  @keyframes textEffect {
    0%,100% {
      color: #ededed;
    }
    60% {
      color: black;
    }
  }

  @keyframes imageEffect {
    0% {
      transform: scale(0.5) rotate(-90deg);
    }
    100% {
      transform: scale(1) rotate(0deg);
    }
  }

  .allContainer:hover .title-container {
    background-color: #ededed;
  }

  .allContainer:hover .title-text {
    color: rgb(60, 60, 59);
  }

  .title-container.active {
    animation: backgroundEffect 1.5s ease-in;
  }

  .title-text.active {
    animation: textEffect .9s ease-in;
  }

  .logo-image.active {
    animation: imageEffect .9s ease-in-out;
  }
</style>

<script>
  // IntersectionObserver para animaciones en scroll
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      const titleContainer = entry.target;
      const titleText = titleContainer.querySelector('.title-text');
      const logoImage = titleContainer.parentElement?.querySelector('.logo-image');
      
      if (entry.intersectionRatio >= 0.8) {
        titleContainer.classList.add('active');
        titleText?.classList.add('active');
        logoImage?.classList.add('active');
      } else if (entry.intersectionRatio <= 0.7) {
        titleContainer.classList.remove('active');
        titleText?.classList.remove('active');
        logoImage?.classList.remove('active');
      }
    });
  }, {
    threshold: [0.7, 0.75, 0.8],
    rootMargin: '0px'
  });

  // Observar elementos
  document.querySelectorAll('.title-container').forEach((el) => {
    observer.observe(el);
  });
</script>